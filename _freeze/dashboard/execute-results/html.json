{
  "hash": "b7e0c8de4ba53a2788855cccc63f49d9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Air Quality Dashboard\"\nauthor: \"Your Name\"\ndate: \"2024-12-12\"\noutput: \n  html_document:\n    theme: flatly\n    highlight: tango\neditor_options:\n  chunk_output_type: inline\nruntime: shiny\n---\n\n\n\n\n\n# Air Quality Dashboard\n\nThis dashboard explores the relationship between air quality and respiratory health outcomes in Pittsburgh's block groups.\n\n## Load Libraries and Data\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(shiny)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'shiny'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:infer':\n\n    observe\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(DT)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'DT'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:shiny':\n\n    dataTableOutput, renderDataTable\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(leaflet)\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(leaflet.extras)\nlibrary(shinydashboard)\n\n# Load block group-level dataset\ndf <- read.csv(\"data/merged_1_2.csv\")\n\n# Load shapefile data\nshapefile_path <- \"data/shapefiles/tl_2021_42_bg.shp\"\nshapes <- st_read(shapefile_path)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tl_2021_42_bg' from data source \n  `/Users/satya/Documents/Acads/Dataviz/Project/project-01-Uchihas/data/shapefiles/tl_2021_42_bg.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 10173 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -80.51985 ymin: 39.7198 xmax: -74.68956 ymax: 42.51607\nGeodetic CRS:  NAD83\n```\n\n\n:::\n\n```{.r .cell-code}\n# Convert GEOID in shapefile and Block_Group in dataset to the same type\nshapes <- shapes %>%\n  mutate(GEOID = as.character(GEOID))\n\ndf <- df %>%\n  mutate(Block_Group = as.character(Block_Group))\n\n# Merge the dataset with the shapefile\nmerged_data <- shapes %>%\n  left_join(df, by = c(\"GEOID\" = \"Block_Group\"))\n\n# Sample the spatial dataset for faster rendering\nset.seed(42)  # Ensures reproducibility of sampling\nsampled_data <- merged_data %>%\n  sample_n(500)\n```\n:::\n\n\n\n\n\n## User interface\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nui <- dashboardPage(\n  dashboardHeader(title = \"Air Quality Dashboard\"),\n  dashboardSidebar(\n    sidebarMenu(\n      menuItem(\"Overview\", tabName = \"overview\"),\n      menuItem(\"Data Explorer\", tabName = \"data_explorer\"),\n      menuItem(\"Hospital Admissions\", tabName = \"admissions\"),\n      menuItem(\"Demographics\", tabName = \"demographics\"),\n      menuItem(\"Spatial Heatmap\", tabName = \"heatmap\")\n    )\n  ),\n  dashboardBody(\n    tabItems(\n      tabItem(tabName = \"overview\",\n              h2(\"Exploring Air Quality and Health Impacts in Pittsburgh\"),\n              p(\"This dashboard is designed to uncover the relationship between air pollutants and respiratory health outcomes in Pittsburgh's block groups.\"),\n              fluidRow(\n                column(width = 12,\n                       h4(\"What Problems Are We Solving?\"),\n                       p(\"Air pollution poses serious health risks, especially to vulnerable populations.\n                         Despite existing regulations, certain neighborhoods continue to face disproportionate\n                         exposure to harmful pollutants like NO2 and SO2.\"),\n                       p(\"Our goal is to:\"),\n                       tags$ul(\n                         tags$li(\"Identify hotspots of high air pollution concentrations.\"),\n                         tags$li(\"Analyze the impact of pollutants on health outcomes, including hospital admissions.\"),\n                         tags$li(\"Understand demographic disparities in pollution exposure and health risks.\"),\n                         tags$li(\"Enable data-driven policy recommendations for cleaner air and healthier communities.\")\n                       ),\n                       h4(\"Why Is This Important?\"),\n                       p(\"Air pollution contributes to thousands of premature deaths and illnesses each year. By visualizing and analyzing the data,\n                         this project provides insights into how air quality impacts public health, particularly in underserved communities.\"),\n                       p(\"Through this dashboard, we aim to raise awareness, support community action, and inform policymakers for targeted interventions.\")\n                )\n              )\n      ),\n      tabItem(tabName = \"data_explorer\",\n              sidebarLayout(\n                sidebarPanel(\n                  uiOutput(\"dynamic_x_var\"),\n                  uiOutput(\"dynamic_y_var\"),\n                  uiOutput(\"dynamic_data_range\")\n                ),\n                mainPanel(\n                  plotlyOutput(\"explorer_plot\"),\n                  h4(\"Data Insights:\"),\n                  textOutput(\"data_insights\"),\n                  fluidRow(\n                    valueBoxOutput(\"avg_x_card\"),\n                    valueBoxOutput(\"avg_y_card\"),\n                    valueBoxOutput(\"correlation_card\")\n                  )\n                )\n              )\n      ),\n      tabItem(tabName = \"admissions\",\n              sidebarLayout(\n                sidebarPanel(\n                  sliderInput(\"pollutant_range\", \"Filter Pollutant Concentration:\",\n                              min = min(df$NO2_Hospital_Admissions_V),\n                              max = max(df$NO2_Hospital_Admissions_V),\n                              value = c(min(df$NO2_Hospital_Admissions_V), max(df$NO2_Hospital_Admissions_V))),\n                  # Key Findings below slider\n                  h3(\"Key Findings:\"),\n                  tags$ul(\n                    tags$li(\"A positive correlation was observed between higher NO₂ and SO₂ concentrations and increased hospital admissions for respiratory conditions.\"),\n                    tags$li(\"Block groups near industrial zones exhibited the highest pollutant levels and hospital admissions, suggesting environmental and health inequities.\")\n                  ),\n                  h3(\"Interpretation:\"),\n                  tags$ul(\n                    tags$li(\"NO₂, typically associated with vehicle emissions, showed a strong impact in urbanized areas.\"),\n                    tags$li(\"SO₂, largely a byproduct of industrial activity, disproportionately affected block groups near industrial facilities.\")\n                  ),\n                  h3(\"Policy Implications:\"),\n                  tags$ul(\n                    tags$li(\"Insights support the need for targeted interventions, such as stricter emissions regulations and healthcare support for vulnerable communities.\"),\n                    tags$li(\"Spatial heatmaps can guide local governments in prioritizing air quality monitoring and pollution reduction efforts.\")\n                  )\n                ),\n                mainPanel(\n                  plotlyOutput(\"pollutant_plot\"),\n                  h4(\"Insights:\"),\n                  textOutput(\"pollutant_insights\"),\n                  fluidRow(\n                    valueBoxOutput(\"avg_no2_card\", width = 4),\n                    valueBoxOutput(\"avg_so2_card\", width = 4),\n                    valueBoxOutput(\"avg_admissions_card\", width = 4)\n                  )\n                )\n              )\n      ),\n      tabItem(tabName = \"demographics\",\n              sidebarLayout(\n                sidebarPanel(\n                  checkboxGroupInput(\"age_groups\", \"Select Age Groups:\",\n                                     choices = c(\"Under 1\" = \"NO2 (Under 13%)\",\n                                                 \"Under 13\" = \"O3 (Over 70%)\",\n                                                 \"Over 70\" = \"PM2.5 (Under 1%)\"),\n                                     selected = c(\"under_1pct\", \"under_13pc\", \"over_70pct\"))\n                ),\n                mainPanel(\n                  plotlyOutput(\"demographics_plot\"),\n                  h4(\"Demographic Insights:\"),\n                  textOutput(\"demographic_insights\"),\n\n                  # New insights about age-related exposure effects below the demographic insights\n                  h3(\"Age-Related Exposure Insights:\"),\n                  tags$ul(\n                    tags$li(\"NO₂ (Under 13%): The distribution of NO₂ exposure and its effect on the under-13 population.\"),\n                    tags$li(\"O₃ (Over 70%): The distribution of O₃ exposure and its effect on the over-70 population.\"),\n                    tags$li(\"PM₂.₅ (Under 1%): The distribution of PM₂.₅ exposure and its effect on the under-1 population.\")\n                  )\n                )\n              )\n      ),\n      tabItem(tabName = \"heatmap\",\n              sidebarLayout(\n                sidebarPanel(\n                  selectInput(\"map_variable\", \"Select Variable to Display:\",\n                              choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3\", colnames(df))],\n                              selected = \"NO2_Hospital_Admissions_V\"),\n                  sliderInput(\"radius\", \"Heatmap Radius:\", min = 5, max = 50, value = 20),\n                  sliderInput(\"blur\", \"Heatmap Blur:\", min = 5, max = 50, value = 15),\n                  sliderInput(\"max\", \"Max Intensity:\", min = 0, max = 1, value = 0.5, step = 0.1)\n                ),\n                mainPanel(\n                  leafletOutput(\"heatmap\"),\n                  h4(\"Spatial Insights:\"),\n                  textOutput(\"spatial_insights\"),\n\n                  # Data cards for age and admission rate below the heatmap\n                  fluidRow(\n                    valueBoxOutput(\"avg_age_card\", width = 6),\n                    valueBoxOutput(\"avg_admission_rate_card\", width = 6)\n                  )\n                )\n              )\n      )\n    )\n  )\n)\n```\n:::\n\n\n\n\n\n### Server logic\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nserver <- function(input, output, session) {\n  filtered_data <- reactive({\n    df %>% filter(NO2_Hospital_Admissions_V >= input$pollutant_range[1] &\n                    NO2_Hospital_Admissions_V <= input$pollutant_range[2])\n  })\n\n  output$pollutant_plot <- renderPlotly({\n    data <- filtered_data()\n\n    lm_no2 <- lm(NO2_Asthma_Exacerbation_I ~ NO2_Hospital_Admissions_V, data = data)\n    lm_so2 <- lm(SO2_Asthma_Exacerbation_I ~ SO2_Hospital_Admissions_V, data = data)\n\n    plot_ly(data, x = ~NO2_Hospital_Admissions_V, y = ~NO2_Asthma_Exacerbation_I,\n            type = \"scatter\", mode = \"markers\", name = \"NO2\",\n            text = ~paste(\"Block Group:\", Block_Group)) %>%\n      add_trace(x = ~SO2_Hospital_Admissions_V, y = ~SO2_Asthma_Exacerbation_I,\n                type = \"scatter\", mode = \"markers\", name = \"SO2\",\n                text = ~paste(\"Block Group:\", Block_Group)) %>%\n      add_lines(x = ~NO2_Hospital_Admissions_V, y = ~fitted(lm_no2),\n                line = list(color = 'blue'), name = 'NO2 Regression') %>%\n      add_lines(x = ~SO2_Hospital_Admissions_V, y = ~fitted(lm_so2),\n                line = list(color = 'red'), name = 'SO2 Regression') %>%\n      layout(title = \"NO2 and SO2 Concentration vs Hospital Admissions\",\n             xaxis = list(title = \"Pollutant Concentration (µg/m³)\"),\n             yaxis = list(title = \"Hospital Admissions Rate\"))\n  })\n\n  output$pollutant_insights <- renderText({\n    data <- filtered_data()\n\n    no2_correlation <- cor(data$NO2_Hospital_Admissions_V, data$NO2_Asthma_Exacerbation_I)\n    so2_correlation <- cor(data$SO2_Hospital_Admissions_V, data$SO2_Asthma_Exacerbation_I)\n\n    paste0(\n      \"The correlation between NO₂ concentration and hospital admissions is \", round(no2_correlation, 2), \n      \". The correlation between SO₂ concentration and hospital admissions is \", round(so2_correlation, 2), \n      \".\"\n    )\n  })\n\n  # Data cards in Hospital Admissions tab\n  output$avg_no2_card <- renderValueBox({\n    avg_no2 <- mean(filtered_data()$NO2_Hospital_Admissions_V, na.rm=TRUE)\n    valueBox(value=round(avg_no2, 2), subtitle=\"Average NO₂ Concentration\", icon=icon('cloud'), color=\"blue\")\n  })\n\n  output$avg_so2_card <- renderValueBox({\n    avg_so2 <- mean(filtered_data()$SO2_Hospital_Admissions_V, na.rm=TRUE)\n    valueBox(value=round(avg_so2, 2), subtitle=\"Average SO₂ Concentration\", icon=icon('smog'), color=\"yellow\")\n  })\n\n  output$avg_admissions_card <- renderValueBox({\n    avg_admissions <- mean(filtered_data()$NO2_Asthma_Exacerbation_I, na.rm=TRUE)\n    valueBox(value=round(avg_admissions, 0), subtitle=\"Average Hospital Admissions\", icon=icon('hospital'), color=\"red\")\n  \n  })\n  \n\n\n  # New outputs for data cards in Hospital Admissions tab\n  output$avg_no2_card <- renderValueBox({\n    avg_no2 <- mean(filtered_data()$NO2_Hospital_Admissions_V, na.rm = TRUE)\n    valueBox(\n      value = round(avg_no2, 2),\n      subtitle = \"Average NO₂ Concentration\",\n      icon = icon(\"cloud\"),\n      color = \"blue\"\n    )\n  })\n\n  output$avg_so2_card <- renderValueBox({\n    avg_so2 <- mean(filtered_data()$SO2_Hospital_Admissions_V, na.rm = TRUE)\n    valueBox(\n      value = round(avg_so2, 2),\n      subtitle = \"Average SO₂ Concentration\",\n      icon = icon(\"smog\"),\n      color = \"yellow\"\n    )\n  })\n\n  output$avg_admissions_card <- renderValueBox({\n    avg_admissions <- mean(filtered_data()$NO2_Asthma_Exacerbation_I, na.rm = TRUE)\n    valueBox(\n      value = round(avg_admissions, 2),\n      subtitle = \"Average Hospital Admissions\",\n      icon = icon(\"hospital\"),\n      color = \"red\"\n    )\n  })\n\n  # Updated box plot with gas types and age group effects\n  output$demographics_plot <- renderPlotly({\n    data_long <- data.frame(\n      Gas_Type = c(rep(\"NO2 (Under 13%)\", nrow(df)), \n                   rep(\"O3 (Over 70%)\", nrow(df)), \n                   rep(\"PM2.5 (Under 1%)\", nrow(df))),\n      Population_Percentage = c(df$under_13pc, df$over_70pct, df$under_1pct)\n    )\n    \n    plot_ly(data_long, x = ~Gas_Type, y = ~Population_Percentage, type = \"box\", color = ~Gas_Type) %>%\n      layout(\n        title = \"Distribution of Gas Exposure Effects on Age Groups\",\n        xaxis = list(title = \"Gas Type and Age Group\"),\n        yaxis = list(title = \"Population Percentage (%)\")\n      )\n  })\n\n  output$heatmap <- renderLeaflet({\n    heatmap_data <- st_centroid(sampled_data) %>%\n      st_coordinates() %>%\n      as.data.frame() %>%\n      cbind(value = sampled_data[[input$map_variable]])\n\n    leaflet() %>%\n      addTiles() %>%\n      addHeatmap(\n        data = heatmap_data,\n        lng = ~X,\n        lat = ~Y,\n        intensity = ~value,\n        blur = input$blur,\n        max = input$max,\n        radius = input$radius\n      )\n  })\n\n  output$spatial_insights <- renderText({\n    paste(\"This heatmap visualizes\", input$map_variable,\n          \"across a sample of block groups in Pittsburgh. Darker and more intense areas indicate higher values.\")\n  })\n\n  output$dynamic_x_var <- renderUI({\n    selectInput(\"x_var\", \"Select X-axis Variable:\",\n                choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3|Asthma|Hospital\", colnames(df))])\n  })\n\n  output$dynamic_y_var <- renderUI({\n    selectInput(\"y_var\", \"Select Y-axis Variable:\",\n                choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3|Asthma|Hospital\", colnames(df))])\n  })\n\n  output$dynamic_data_range <- renderUI({\n    sliderInput(\"data_range\", \"Select Range for X-axis Variable:\",\n                min = min(df[[input$x_var]], na.rm = TRUE),\n                max = max(df[[input$x_var]], na.rm = TRUE),\n                value = c(min(df[[input$x_var]], na.rm = TRUE), max(df[[input$x_var]], na.rm = TRUE)))\n  })\n\n  output$explorer_plot <- renderPlotly({\n    data_filtered <- df %>%\n      filter(\n        .data[[input$x_var]] >= input$data_range[1] &\n          .data[[input$x_var]] <= input$data_range[2]\n      )\n\n    plot_ly(data_filtered, x = ~.data[[input$x_var]], y = ~.data[[input$y_var]],\n            type = \"scatter\", mode = \"markers\") %>%\n      layout(title = paste(input$x_var, \"vs\", input$y_var),\n             xaxis = list(title = input$x_var),\n             yaxis = list(title = input$y_var))\n  })\n\n  output$data_insights <- renderText({\n    paste(\"Explore the relationship between the variables selected. Adjust the range and see how the data distribution changes.\")\n  })\n\n  output$avg_x_card <- renderValueBox({\n    avg_x <- mean(df[[input$x_var]], na.rm = TRUE)\n    valueBox(\n      value = round(avg_x, 2),\n      subtitle = paste(\"Average\", input$x_var),\n      icon = icon(\"calculator\")\n    )\n  })\n\n  output$avg_y_card <- renderValueBox({\n    avg_y <- mean(df[[input$y_var]], na.rm = TRUE)\n    valueBox(\n      value = round(avg_y, 2),\n      subtitle = paste(\"Average\", input$y_var),\n      icon = icon(\"calculator\")\n    )\n  })\n\n  output$correlation_card <- renderValueBox({\n    correlation <- cor(df[[input$x_var]], df[[input$y_var]], use = \"complete.obs\")\n    valueBox(\n      value = round(correlation, 2),\n      subtitle = \"Correlation\",\n      icon = icon(\"chart-line\")\n    )\n  })\n}\n```\n:::\n\n\n\n\n\n# Run the app\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshinyApp(ui, server)\n```\n\n::: {.cell-output-display}\n`<iframe data-deferred-src=\"appd7796985e6c889135e534742a183f80f/?w=&amp;__subapp__=1\" width=\"100%\" height=\"400\" class=\"shiny-frame shiny-frame-deferred\"></iframe>`{=html}\n:::\n:::\n",
    "supporting": [
      "dashboard_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}