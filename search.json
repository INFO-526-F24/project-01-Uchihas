[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Environmental and Demographic Analysis of Pittsburgh, PA",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "Environmental and Demographic Analysis of Pittsburgh, PA",
    "section": "Dataset",
    "text": "Dataset\n\n# Load the datasets\nbenmap &lt;- read_csv(\"data/PitPA_BenMap.csv\")\nbg_pop &lt;- read_csv(\"data/PitPA_BG_Pop.csv\")\n\n\nglimpse(benmap)\n\nRows: 1,089\nColumns: 15\n$ Block_Group                       &lt;dbl&gt; 420030103001, 420030103002, 42003010…\n$ NO2_Hospital_Admissions_V         &lt;dbl&gt; 118.57962013, 62.63590022, 2.0285167…\n$ NO2_Asthma_Exacerbation_I         &lt;dbl&gt; 0.4993700207, 0.2637762775, 0.008542…\n$ NO2_Asthma_Exacerbation_V         &lt;dbl&gt; 43.590159075, 23.025110480, 0.745687…\n$ O3_Acute_Respiratory_Symptoms_I   &lt;dbl&gt; 1.7031063592, 0.8996115847, 0.029134…\n$ O3_Mortality_V                    &lt;dbl&gt; 6697.147907, 3537.554662, 114.566706…\n$ O3_School_Loss_Days_I             &lt;dbl&gt; 3.417053e-02, 1.804949e-02, 5.845482…\n$ O3_School_Loss_Days_V             &lt;dbl&gt; 3.355211e+00, 1.772283e+00, 5.739689…\n$ PM25_Acute_Respiratory_Symptoms_I &lt;dbl&gt; 1.6017877172, 0.8460932453, 0.027401…\n$ PM25_Mortality_V                  &lt;dbl&gt; 19253.353700, 10169.969678, 329.3630…\n$ PM25_Work_Loss_Days_I             &lt;dbl&gt; 2.694129e-01, 1.423087e-01, 4.608789…\n$ PM25_Work_Loss_Days_V             &lt;dbl&gt; 45.25898506, 23.90661455, 0.77423597…\n$ SO2_Asthma_Exacerbation_I         &lt;dbl&gt; 1.386986e-02, 7.326311e-03, 2.372688…\n$ SO2_Asthma_Exacerbation_V         &lt;dbl&gt; 1.0950007738, 0.5783992150, 0.018731…\n$ SO2_Hospital_Admissions_V         &lt;dbl&gt; 40.45557668, 21.36936736, 0.69206507…\n\nglimpse(bg_pop)\n\nRows: 1,089\nColumns: 13\n$ bgrp       &lt;dbl&gt; 420030103001, 420030103002, 420030103003, 420030103004, 420…\n$ SUM_HOUSIN &lt;dbl&gt; 0, 1, 199, 188, 349, 873, 95, 563, 11, 451, 473, 769, 501, …\n$ SUM_POP10  &lt;dbl&gt; 2594, 3336, 353, 317, 1435, 936, 28, 798, 9, 423, 616, 1403…\n$ under_1    &lt;dbl&gt; 0, 0, 5, 3, 3, 4, 0, 3, 0, 3, 2, 11, 8, 14, 3, 0, 2, 2, 2, …\n$ under_1pct &lt;dbl&gt; 0.000000, 0.000000, 1.416430, 0.946372, 0.209059, 0.427350,…\n$ under_13   &lt;dbl&gt; 0, 0, 22, 62, 10, 7, 0, 10, 0, 20, 39, 179, 149, 138, 27, 1…\n$ under_13pc &lt;dbl&gt; 0.000000, 0.000000, 6.232290, 19.558399, 0.696864, 0.747863…\n$ over_70    &lt;dbl&gt; 2, 4, 35, 33, 19, 206, 2, 72, 3, 10, 22, 224, 129, 54, 107,…\n$ over_70pct &lt;dbl&gt; 0.077101, 0.119904, 9.915010, 10.410100, 1.324040, 22.00849…\n$ NonWhite   &lt;dbl&gt; 1608, 391, 127, 214, 406, 261, 6, 198, 0, 116, 157, 1219, 7…\n$ NonWt_Pct  &lt;dbl&gt; 61.98921, 11.72062, 35.97734, 67.50789, 28.29268, 27.88462,…\n$ PLx2_Pop   &lt;dbl&gt; 0, 693, 144, 84, 261, 279, 43, 382, 0, 50, 140, 1171, 590, …\n$ PLx2_Pct   &lt;dbl&gt; 0.00000, 98.57752, 76.19048, 60.86957, 80.30769, 30.09709, …\n\n\nDescription:\n\nPitPA_BenMap: This dataset, sourced from the EPA’s BenMAP program, includes 1089 observations across 15 variables, focusing on air quality (e.g., NO2 levels) and health outcomes such as hospital admissions for respiratory conditions.\nPitPA_BG_Pop: Contains demographic data at the block group level, with 1089 observations and 13 variables, including population counts and housing information. Sourced from the American Community Survey.\n\nReason for Choosing:\n\nThese datasets offer a comprehensive view of the environmental and demographic factors influencing Pittsburgh’s communities. They enable a dual focus on health impacts of air pollution and the relationship between health risk and population density."
  },
  {
    "objectID": "proposal.html#questions",
    "href": "proposal.html#questions",
    "title": "Environmental and Demographic Analysis of Pittsburgh, PA",
    "section": "Questions",
    "text": "Questions\nThe two questions you want to answer.\n#| label: analysis-plan #| message: false\n\nResearch Question 1: How does the concentration of NO2 & SO2 impact the rate of hospital admissions for respiratory conditions across different block groups in Pittsburgh, PA?\n\nImportance: This question is crucial for understanding the direct impact of air pollution on community health, helping to inform public health interventions.\nVariables:\n\nNO2 concentration (Quantitative)\nRate of hospital admissions for respiratory conditions (Quantitative)\nBlock group identifier (Categorical)\n\n\nResearch Question 2: How does the extent of gases affect certain age group of housing density across different block groups in Pittsburgh, PA?\n\nImportance: To analyze whether certain age groups or racial demographics are disproportionately affected.\nVariables:\n\nAge Groups: under_1, under_13, over_70, and their percentages. (Quantitative)\nHealth Metrics: E.g., NO2_Asthma_Exacerbation_V, O3_Mortality_V, PM25_Mortality_V (Quantitative)\nRacial Demographics: NonWhite, NonWt_Pct (Categorical)"
  },
  {
    "objectID": "proposal.html#analysis-plan",
    "href": "proposal.html#analysis-plan",
    "title": "Environmental and Demographic Analysis of Pittsburgh, PA",
    "section": "Analysis plan",
    "text": "Analysis plan\n\nA plan for answering each of the questions including the variables involved, variables to be created (if any), external data to be merged in (if any).\n#| label: analysis-plan #| message: false\n\nAnalysis Plan for Research Question 1:\n\nData Preparation:\n\nClean and filter the benmap dataset to retain relevant columns: NO2 concentration, hospital_admissions, and bgrp.\nMerge with bg_pop to incorporate demographic controls if necessary.\n\nVisualization:\n\nCreate a scatter plot of NO2 concentration against hospital admissions using ggplot2.\nUse geom_smooth() to add a trend line and assess the strength of the relationship.\nUse leaflet or ggplot2 with spatial data to create a heatmap overlaying NO2 levels and hospital admission rates.\n\nModeling:\n\nUse linear regression to model the relationship between NO2 concentration and hospital admissions.\nInclude demographic variables (e.g., population density) from bg_pop as controls to adjust for confounding factors.\n\n\nAnalysis Plan for Research Question 2:\n\nData Preparation:\n\nJoin the datasets on Block_Group and bgrp.\nAnalyze correlations between demographic variables (e.g., age, race) and health impacts to identify disproportionate effects.\n\nVisualization:\n\nCreate a scatter plot of the percentage of Age Groups against housing density.\nUse geom_point() and geom_smooth() to observe trends and relationships.\nCreate a bar chart or box plot to compare housing densities across different ranges of Age Groups/Racial demographics.\n\nModeling:\n\nUse linear regression to analyze the impact of Age group percentage on housing density.\nConsider using interaction terms to explore if the relationship differs across urban and suburban areas.\nNext Steps\n\nData Cleaning: Perform initial cleaning to handle missing values, ensure consistent column names, and validate data types.\nData Exploration: Conduct exploratory data analysis (EDA) to understand distributions and potential outliers in the key variables.\nMerge Datasets: Use left_join() or inner_join() in dplyr to merge benmap and bg_pop datasets based on bgrp (block group identifier).\nVisualization and Analysis: Generate the planned visualizations and build statistical models to test hypotheses.\nInterpretation: Interpret the results in the context of urban planning and public health for Pittsburgh, PA."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project was developed by [Team Uchihas] For INFO 526 - Data Analysis and Visualization at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nTeam member 1: Jayant Biradar: A 2nd year Information Science Master’s student.\nTeam member 2: Harsh Wasnik: A 2nd year Information Science Master’s student.\nTeam member 3: Venkata Satya Murali Krishna Chittlu: A 2nd year Information Science Master’s student.\nTeam member 4: Spoorthy Nagendra: A 1st year Data Science Master’s student.\nTeam member 5: Abhighyan Bommerla: A 1st year Data Science Master’s student.\nTeam member 6: Disha Motwani: A 2nd year Information Science Master’s student."
  },
  {
    "objectID": "dashboard.html",
    "href": "dashboard.html",
    "title": "Air Quality Dashboard",
    "section": "",
    "text": "This dashboard explores the relationship between air quality and respiratory health outcomes in Pittsburgh’s block groups.\n\n\n\n# Load required libraries\nlibrary(shiny)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(DT)\n\n\nAttaching package: 'DT'\n\n\nThe following objects are masked from 'package:shiny':\n\n    dataTableOutput, renderDataTable\n\nlibrary(tidyr)\nlibrary(leaflet)\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(leaflet.extras)\nlibrary(shinydashboard)\n\n\nAttaching package: 'shinydashboard'\n\n\nThe following object is masked from 'package:graphics':\n\n    box\n\n# Load block group-level dataset\ndf &lt;- read.csv(\"data/merged_1_2.csv\")\n\n# Load shapefile data\nshapefile_path &lt;- \"data/shapefiles/tl_2021_42_bg.shp\"\nshapes &lt;- st_read(shapefile_path)\n\nReading layer `tl_2021_42_bg' from data source \n  `/Users/jayantbiradar/Desktop/local_app/full_project_repo/project-01-Uchihas/data/shapefiles/tl_2021_42_bg.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 10173 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -80.51985 ymin: 39.7198 xmax: -74.68956 ymax: 42.51607\nGeodetic CRS:  NAD83\n\n# Convert GEOID in shapefile and Block_Group in dataset to the same type\nshapes &lt;- shapes %&gt;%\n  mutate(GEOID = as.character(GEOID))\n\ndf &lt;- df %&gt;%\n  mutate(Block_Group = as.character(Block_Group))\n\n# Merge the dataset with the shapefile\nmerged_data &lt;- shapes %&gt;%\n  left_join(df, by = c(\"GEOID\" = \"Block_Group\"))\n\n# Sample the spatial dataset for faster rendering\nset.seed(42)  # Ensures reproducibility of sampling\nsampled_data &lt;- merged_data %&gt;%\n  sample_n(500)\n\n\n\n\n\n# Define the UI\nui &lt;- dashboardPage(\n  dashboardHeader(title = \"Air Quality Dashboard\"),\n  dashboardSidebar(\n    sidebarMenu(\n      menuItem(\"Overview\", tabName = \"overview\"),\n      menuItem(\"Data Explorer\", tabName = \"data_explorer\"),\n      menuItem(\"Hospital Admissions\", tabName = \"admissions\"),\n      menuItem(\"Demographics\", tabName = \"demographics\"),\n      menuItem(\"Spatial Heatmap\", tabName = \"heatmap\")\n    )\n  ),\n  dashboardBody(\n    tabItems(\n      tabItem(tabName = \"overview\",\n              h2(\"Exploring Air Quality and Health Impacts in Pittsburgh\"),\n              p(\"This dashboard is designed to uncover the relationship between air pollutants and respiratory health outcomes in Pittsburgh's block groups.\"),\n              fluidRow(\n                column(width = 12,\n                       h4(\"What Problems Are We Solving?\"),\n                       p(\"Air pollution poses serious health risks, especially to vulnerable populations.\n                         Despite existing regulations, certain neighborhoods continue to face disproportionate\n                         exposure to harmful pollutants like NO2 and SO2.\"),\n                       p(\"Our goal is to:\"),\n                       tags$ul(\n                         tags$li(\"Identify hotspots of high air pollution concentrations.\"),\n                         tags$li(\"Analyze the impact of pollutants on health outcomes, including hospital admissions.\"),\n                         tags$li(\"Understand demographic disparities in pollution exposure and health risks.\"),\n                         tags$li(\"Enable data-driven policy recommendations for cleaner air and healthier communities.\")\n                       ),\n                       h4(\"Why Is This Important?\"),\n                       p(\"Air pollution contributes to thousands of premature deaths and illnesses each year. By visualizing and analyzing the data,\n                         this project provides insights into how air quality impacts public health, particularly in underserved communities.\"),\n                       p(\"Through this dashboard, we aim to raise awareness, support community action, and inform policymakers for targeted interventions.\")\n                )\n              )\n      ),\n      tabItem(tabName = \"data_explorer\",\n              sidebarLayout(\n                sidebarPanel(\n                  uiOutput(\"dynamic_x_var\"),\n                  uiOutput(\"dynamic_y_var\"),\n                  uiOutput(\"dynamic_data_range\")\n                ),\n                mainPanel(\n                  plotlyOutput(\"explorer_plot\"),\n                  h4(\"Data Insights:\"),\n                  textOutput(\"data_insights\"),\n                  fluidRow(\n                    valueBoxOutput(\"avg_x_card\"),\n                    valueBoxOutput(\"avg_y_card\"),\n                    valueBoxOutput(\"correlation_card\")\n                  )\n                )\n              )\n      ),\n      tabItem(tabName = \"admissions\",\n              sidebarLayout(\n                sidebarPanel(\n                  sliderInput(\"pollutant_range\", \"Filter Pollutant Concentration:\",\n                              min = min(df$NO2_Hospital_Admissions_V),\n                              max = max(df$NO2_Hospital_Admissions_V),\n                              value = c(min(df$NO2_Hospital_Admissions_V), max(df$NO2_Hospital_Admissions_V)))\n                ),\n                mainPanel(\n                  plotlyOutput(\"pollutant_plot\"),\n                  h4(\"Insights:\"),\n                  textOutput(\"pollutant_insights\")\n                )\n              )\n      ),\n      tabItem(tabName = \"demographics\",\n              sidebarLayout(\n                sidebarPanel(\n                  checkboxGroupInput(\"age_groups\", \"Select Age Groups:\",\n                                     choices = c(\"Under 1\" = \"under_1pct\",\n                                                 \"Under 13\" = \"under_13pc\",\n                                                 \"Over 70\" = \"over_70pct\"),\n                                     selected = c(\"under_1pct\", \"under_13pc\", \"over_70pct\"))\n                ),\n                mainPanel(\n                  plotlyOutput(\"demographics_plot\"),\n                  h4(\"Demographic Insights:\"),\n                  textOutput(\"demographic_insights\")\n                )\n              )\n      ),\n      tabItem(tabName = \"heatmap\",\n              sidebarLayout(\n                sidebarPanel(\n                  selectInput(\"map_variable\", \"Select Variable to Display:\",\n                              choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3\", colnames(df))],\n                              selected = \"NO2_Hospital_Admissions_V\"),\n                  sliderInput(\"radius\", \"Heatmap Radius:\", min = 5, max = 50, value = 20),\n                  sliderInput(\"blur\", \"Heatmap Blur:\", min = 5, max = 50, value = 15),\n                  sliderInput(\"max\", \"Max Intensity:\", min = 0, max = 1, value = 0.5, step = 0.1)\n                ),\n                mainPanel(\n                  leafletOutput(\"heatmap\"),\n                  h4(\"Spatial Insights:\"),\n                  textOutput(\"spatial_insights\")\n                )\n              )\n      )\n    )\n  )\n)\n\n\n\n\n# Define the server logic\nserver &lt;- function(input, output, session) {\n  filtered_data &lt;- reactive({\n    df %&gt;% filter(NO2_Hospital_Admissions_V &gt;= input$pollutant_range[1] &\n                    NO2_Hospital_Admissions_V &lt;= input$pollutant_range[2])\n  })\n\n  output$pollutant_plot &lt;- renderPlotly({\n    data &lt;- filtered_data()\n\n    lm_no2 &lt;- lm(NO2_Asthma_Exacerbation_I ~ NO2_Hospital_Admissions_V, data = data)\n    lm_so2 &lt;- lm(SO2_Asthma_Exacerbation_I ~ SO2_Hospital_Admissions_V, data = data)\n\n    plot_ly(data, x = ~NO2_Hospital_Admissions_V, y = ~NO2_Asthma_Exacerbation_I,\n            type = \"scatter\", mode = \"markers\", name = \"NO2\",\n            text = ~paste(\"Block Group:\", Block_Group)) %&gt;%\n      add_trace(x = ~SO2_Hospital_Admissions_V, y = ~SO2_Asthma_Exacerbation_I,\n                type = \"scatter\", mode = \"markers\", name = \"SO2\",\n                text = ~paste(\"Block Group:\", Block_Group)) %&gt;%\n      add_lines(x = ~NO2_Hospital_Admissions_V, y = ~fitted(lm_no2),\n                line = list(color = 'blue'), name = 'NO2 Regression') %&gt;%\n      add_lines(x = ~SO2_Hospital_Admissions_V, y = ~fitted(lm_so2),\n                line = list(color = 'red'), name = 'SO2 Regression') %&gt;%\n      layout(title = \"NO2 and SO2 Concentration vs Hospital Admissions\",\n             xaxis = list(title = \"Pollutant Concentration (µg/m³)\"),\n             yaxis = list(title = \"Hospital Admissions Rate\"))\n  })\n\n  output$pollutant_insights &lt;- renderText({\n    data &lt;- filtered_data()\n\n    no2_correlation &lt;- cor(data$NO2_Hospital_Admissions_V, data$NO2_Asthma_Exacerbation_I)\n    so2_correlation &lt;- cor(data$SO2_Hospital_Admissions_V, data$SO2_Asthma_Exacerbation_I)\n\n    paste(\"The correlation between NO2 concentration and hospital admissions is\", round(no2_correlation, 2),\n          \". The correlation between SO2 concentration and hospital admissions is\", round(so2_correlation, 2),\n          \". This suggests that\", ifelse(abs(no2_correlation) &gt; abs(so2_correlation), \"NO2\", \"SO2\"),\n          \"has a stronger relationship with hospital admissions.\")\n  })\n\n  output$demographics_plot &lt;- renderPlotly({\n    data_long &lt;- df %&gt;%\n      select(Block_Group, !!!syms(input$age_groups), NonWt_Pct) %&gt;%\n      pivot_longer(cols = -c(Block_Group, NonWt_Pct), names_to = \"Age_Group\", values_to = \"Percentage\")\n\n    plot_ly(data_long, x = ~Age_Group, y = ~Percentage, color = ~Age_Group, type = \"box\") %&gt;%\n      layout(title = \"Distribution of Age Groups\",\n             xaxis = list(title = \"Age Group\"),\n             yaxis = list(title = \"Percentage of Population\"))\n  })\n\n  output$heatmap &lt;- renderLeaflet({\n    heatmap_data &lt;- st_centroid(sampled_data) %&gt;%\n      st_coordinates() %&gt;%\n      as.data.frame() %&gt;%\n      cbind(value = sampled_data[[input$map_variable]])\n\n    leaflet() %&gt;%\n      addTiles() %&gt;%\n      addHeatmap(\n        data = heatmap_data,\n        lng = ~X,\n        lat = ~Y,\n        intensity = ~value,\n        blur = input$blur,\n        max = input$max,\n        radius = input$radius\n      )\n  })\n\n  output$spatial_insights &lt;- renderText({\n    paste(\"This heatmap visualizes\", input$map_variable,\n          \"across a sample of block groups in Pittsburgh. Darker and more intense areas indicate higher values.\")\n  })\n\n  output$dynamic_x_var &lt;- renderUI({\n    selectInput(\"x_var\", \"Select X-axis Variable:\",\n                choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3|Asthma|Hospital\", colnames(df))])\n  })\n\n  output$dynamic_y_var &lt;- renderUI({\n    selectInput(\"y_var\", \"Select Y-axis Variable:\",\n                choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3|Asthma|Hospital\", colnames(df))])\n  })\n\n  output$dynamic_data_range &lt;- renderUI({\n    sliderInput(\"data_range\", \"Select Range for X-axis Variable:\",\n                min = min(df[[input$x_var]], na.rm = TRUE),\n                max = max(df[[input$x_var]], na.rm = TRUE),\n                value = c(min(df[[input$x_var]], na.rm = TRUE), max(df[[input$x_var]], na.rm = TRUE)))\n  })\n\n  output$explorer_plot &lt;- renderPlotly({\n    data_filtered &lt;- df %&gt;%\n      filter(\n        .data[[input$x_var]] &gt;= input$data_range[1] &\n          .data[[input$x_var]] &lt;= input$data_range[2]\n      )\n\n    plot_ly(data_filtered, x = ~.data[[input$x_var]], y = ~.data[[input$y_var]],\n            type = \"scatter\", mode = \"markers\") %&gt;%\n      layout(title = paste(input$x_var, \"vs\", input$y_var),\n             xaxis = list(title = input$x_var),\n             yaxis = list(title = input$y_var))\n  })\n\n  output$data_insights &lt;- renderText({\n    paste(\"Explore the relationship between the variables selected. Adjust the range and see how the data distribution changes.\")\n  })\n\n  output$avg_x_card &lt;- renderValueBox({\n    avg_x &lt;- mean(df[[input$x_var]], na.rm = TRUE)\n    valueBox(\n      value = round(avg_x, 2),\n      subtitle = paste(\"Average\", input$x_var),\n      icon = icon(\"calculator\")\n    )\n  })\n\n  output$avg_y_card &lt;- renderValueBox({\n    avg_y &lt;- mean(df[[input$y_var]], na.rm = TRUE)\n    valueBox(\n      value = round(avg_y, 2),\n      subtitle = paste(\"Average\", input$y_var),\n      icon = icon(\"calculator\")\n    )\n  })\n\n  output$correlation_card &lt;- renderValueBox({\n    correlation &lt;- cor(df[[input$x_var]], df[[input$y_var]], use = \"complete.obs\")\n    valueBox(\n      value = round(correlation, 2),\n      subtitle = \"Correlation\",\n      icon = icon(\"chart-line\")\n    )\n  })\n}"
  },
  {
    "objectID": "dashboard.html#load-libraries-and-data",
    "href": "dashboard.html#load-libraries-and-data",
    "title": "Air Quality Dashboard",
    "section": "",
    "text": "# Load required libraries\nlibrary(shiny)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(DT)\n\n\nAttaching package: 'DT'\n\n\nThe following objects are masked from 'package:shiny':\n\n    dataTableOutput, renderDataTable\n\nlibrary(tidyr)\nlibrary(leaflet)\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(leaflet.extras)\nlibrary(shinydashboard)\n\n\nAttaching package: 'shinydashboard'\n\n\nThe following object is masked from 'package:graphics':\n\n    box\n\n# Load block group-level dataset\ndf &lt;- read.csv(\"data/merged_1_2.csv\")\n\n# Load shapefile data\nshapefile_path &lt;- \"data/shapefiles/tl_2021_42_bg.shp\"\nshapes &lt;- st_read(shapefile_path)\n\nReading layer `tl_2021_42_bg' from data source \n  `/Users/jayantbiradar/Desktop/local_app/full_project_repo/project-01-Uchihas/data/shapefiles/tl_2021_42_bg.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 10173 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -80.51985 ymin: 39.7198 xmax: -74.68956 ymax: 42.51607\nGeodetic CRS:  NAD83\n\n# Convert GEOID in shapefile and Block_Group in dataset to the same type\nshapes &lt;- shapes %&gt;%\n  mutate(GEOID = as.character(GEOID))\n\ndf &lt;- df %&gt;%\n  mutate(Block_Group = as.character(Block_Group))\n\n# Merge the dataset with the shapefile\nmerged_data &lt;- shapes %&gt;%\n  left_join(df, by = c(\"GEOID\" = \"Block_Group\"))\n\n# Sample the spatial dataset for faster rendering\nset.seed(42)  # Ensures reproducibility of sampling\nsampled_data &lt;- merged_data %&gt;%\n  sample_n(500)"
  },
  {
    "objectID": "dashboard.html#user-interface",
    "href": "dashboard.html#user-interface",
    "title": "Air Quality Dashboard",
    "section": "",
    "text": "# Define the UI\nui &lt;- dashboardPage(\n  dashboardHeader(title = \"Air Quality Dashboard\"),\n  dashboardSidebar(\n    sidebarMenu(\n      menuItem(\"Overview\", tabName = \"overview\"),\n      menuItem(\"Data Explorer\", tabName = \"data_explorer\"),\n      menuItem(\"Hospital Admissions\", tabName = \"admissions\"),\n      menuItem(\"Demographics\", tabName = \"demographics\"),\n      menuItem(\"Spatial Heatmap\", tabName = \"heatmap\")\n    )\n  ),\n  dashboardBody(\n    tabItems(\n      tabItem(tabName = \"overview\",\n              h2(\"Exploring Air Quality and Health Impacts in Pittsburgh\"),\n              p(\"This dashboard is designed to uncover the relationship between air pollutants and respiratory health outcomes in Pittsburgh's block groups.\"),\n              fluidRow(\n                column(width = 12,\n                       h4(\"What Problems Are We Solving?\"),\n                       p(\"Air pollution poses serious health risks, especially to vulnerable populations.\n                         Despite existing regulations, certain neighborhoods continue to face disproportionate\n                         exposure to harmful pollutants like NO2 and SO2.\"),\n                       p(\"Our goal is to:\"),\n                       tags$ul(\n                         tags$li(\"Identify hotspots of high air pollution concentrations.\"),\n                         tags$li(\"Analyze the impact of pollutants on health outcomes, including hospital admissions.\"),\n                         tags$li(\"Understand demographic disparities in pollution exposure and health risks.\"),\n                         tags$li(\"Enable data-driven policy recommendations for cleaner air and healthier communities.\")\n                       ),\n                       h4(\"Why Is This Important?\"),\n                       p(\"Air pollution contributes to thousands of premature deaths and illnesses each year. By visualizing and analyzing the data,\n                         this project provides insights into how air quality impacts public health, particularly in underserved communities.\"),\n                       p(\"Through this dashboard, we aim to raise awareness, support community action, and inform policymakers for targeted interventions.\")\n                )\n              )\n      ),\n      tabItem(tabName = \"data_explorer\",\n              sidebarLayout(\n                sidebarPanel(\n                  uiOutput(\"dynamic_x_var\"),\n                  uiOutput(\"dynamic_y_var\"),\n                  uiOutput(\"dynamic_data_range\")\n                ),\n                mainPanel(\n                  plotlyOutput(\"explorer_plot\"),\n                  h4(\"Data Insights:\"),\n                  textOutput(\"data_insights\"),\n                  fluidRow(\n                    valueBoxOutput(\"avg_x_card\"),\n                    valueBoxOutput(\"avg_y_card\"),\n                    valueBoxOutput(\"correlation_card\")\n                  )\n                )\n              )\n      ),\n      tabItem(tabName = \"admissions\",\n              sidebarLayout(\n                sidebarPanel(\n                  sliderInput(\"pollutant_range\", \"Filter Pollutant Concentration:\",\n                              min = min(df$NO2_Hospital_Admissions_V),\n                              max = max(df$NO2_Hospital_Admissions_V),\n                              value = c(min(df$NO2_Hospital_Admissions_V), max(df$NO2_Hospital_Admissions_V)))\n                ),\n                mainPanel(\n                  plotlyOutput(\"pollutant_plot\"),\n                  h4(\"Insights:\"),\n                  textOutput(\"pollutant_insights\")\n                )\n              )\n      ),\n      tabItem(tabName = \"demographics\",\n              sidebarLayout(\n                sidebarPanel(\n                  checkboxGroupInput(\"age_groups\", \"Select Age Groups:\",\n                                     choices = c(\"Under 1\" = \"under_1pct\",\n                                                 \"Under 13\" = \"under_13pc\",\n                                                 \"Over 70\" = \"over_70pct\"),\n                                     selected = c(\"under_1pct\", \"under_13pc\", \"over_70pct\"))\n                ),\n                mainPanel(\n                  plotlyOutput(\"demographics_plot\"),\n                  h4(\"Demographic Insights:\"),\n                  textOutput(\"demographic_insights\")\n                )\n              )\n      ),\n      tabItem(tabName = \"heatmap\",\n              sidebarLayout(\n                sidebarPanel(\n                  selectInput(\"map_variable\", \"Select Variable to Display:\",\n                              choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3\", colnames(df))],\n                              selected = \"NO2_Hospital_Admissions_V\"),\n                  sliderInput(\"radius\", \"Heatmap Radius:\", min = 5, max = 50, value = 20),\n                  sliderInput(\"blur\", \"Heatmap Blur:\", min = 5, max = 50, value = 15),\n                  sliderInput(\"max\", \"Max Intensity:\", min = 0, max = 1, value = 0.5, step = 0.1)\n                ),\n                mainPanel(\n                  leafletOutput(\"heatmap\"),\n                  h4(\"Spatial Insights:\"),\n                  textOutput(\"spatial_insights\")\n                )\n              )\n      )\n    )\n  )\n)\n\n\n\n\n# Define the server logic\nserver &lt;- function(input, output, session) {\n  filtered_data &lt;- reactive({\n    df %&gt;% filter(NO2_Hospital_Admissions_V &gt;= input$pollutant_range[1] &\n                    NO2_Hospital_Admissions_V &lt;= input$pollutant_range[2])\n  })\n\n  output$pollutant_plot &lt;- renderPlotly({\n    data &lt;- filtered_data()\n\n    lm_no2 &lt;- lm(NO2_Asthma_Exacerbation_I ~ NO2_Hospital_Admissions_V, data = data)\n    lm_so2 &lt;- lm(SO2_Asthma_Exacerbation_I ~ SO2_Hospital_Admissions_V, data = data)\n\n    plot_ly(data, x = ~NO2_Hospital_Admissions_V, y = ~NO2_Asthma_Exacerbation_I,\n            type = \"scatter\", mode = \"markers\", name = \"NO2\",\n            text = ~paste(\"Block Group:\", Block_Group)) %&gt;%\n      add_trace(x = ~SO2_Hospital_Admissions_V, y = ~SO2_Asthma_Exacerbation_I,\n                type = \"scatter\", mode = \"markers\", name = \"SO2\",\n                text = ~paste(\"Block Group:\", Block_Group)) %&gt;%\n      add_lines(x = ~NO2_Hospital_Admissions_V, y = ~fitted(lm_no2),\n                line = list(color = 'blue'), name = 'NO2 Regression') %&gt;%\n      add_lines(x = ~SO2_Hospital_Admissions_V, y = ~fitted(lm_so2),\n                line = list(color = 'red'), name = 'SO2 Regression') %&gt;%\n      layout(title = \"NO2 and SO2 Concentration vs Hospital Admissions\",\n             xaxis = list(title = \"Pollutant Concentration (µg/m³)\"),\n             yaxis = list(title = \"Hospital Admissions Rate\"))\n  })\n\n  output$pollutant_insights &lt;- renderText({\n    data &lt;- filtered_data()\n\n    no2_correlation &lt;- cor(data$NO2_Hospital_Admissions_V, data$NO2_Asthma_Exacerbation_I)\n    so2_correlation &lt;- cor(data$SO2_Hospital_Admissions_V, data$SO2_Asthma_Exacerbation_I)\n\n    paste(\"The correlation between NO2 concentration and hospital admissions is\", round(no2_correlation, 2),\n          \". The correlation between SO2 concentration and hospital admissions is\", round(so2_correlation, 2),\n          \". This suggests that\", ifelse(abs(no2_correlation) &gt; abs(so2_correlation), \"NO2\", \"SO2\"),\n          \"has a stronger relationship with hospital admissions.\")\n  })\n\n  output$demographics_plot &lt;- renderPlotly({\n    data_long &lt;- df %&gt;%\n      select(Block_Group, !!!syms(input$age_groups), NonWt_Pct) %&gt;%\n      pivot_longer(cols = -c(Block_Group, NonWt_Pct), names_to = \"Age_Group\", values_to = \"Percentage\")\n\n    plot_ly(data_long, x = ~Age_Group, y = ~Percentage, color = ~Age_Group, type = \"box\") %&gt;%\n      layout(title = \"Distribution of Age Groups\",\n             xaxis = list(title = \"Age Group\"),\n             yaxis = list(title = \"Percentage of Population\"))\n  })\n\n  output$heatmap &lt;- renderLeaflet({\n    heatmap_data &lt;- st_centroid(sampled_data) %&gt;%\n      st_coordinates() %&gt;%\n      as.data.frame() %&gt;%\n      cbind(value = sampled_data[[input$map_variable]])\n\n    leaflet() %&gt;%\n      addTiles() %&gt;%\n      addHeatmap(\n        data = heatmap_data,\n        lng = ~X,\n        lat = ~Y,\n        intensity = ~value,\n        blur = input$blur,\n        max = input$max,\n        radius = input$radius\n      )\n  })\n\n  output$spatial_insights &lt;- renderText({\n    paste(\"This heatmap visualizes\", input$map_variable,\n          \"across a sample of block groups in Pittsburgh. Darker and more intense areas indicate higher values.\")\n  })\n\n  output$dynamic_x_var &lt;- renderUI({\n    selectInput(\"x_var\", \"Select X-axis Variable:\",\n                choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3|Asthma|Hospital\", colnames(df))])\n  })\n\n  output$dynamic_y_var &lt;- renderUI({\n    selectInput(\"y_var\", \"Select Y-axis Variable:\",\n                choices = colnames(df)[grepl(\"NO2|SO2|PM25|O3|Asthma|Hospital\", colnames(df))])\n  })\n\n  output$dynamic_data_range &lt;- renderUI({\n    sliderInput(\"data_range\", \"Select Range for X-axis Variable:\",\n                min = min(df[[input$x_var]], na.rm = TRUE),\n                max = max(df[[input$x_var]], na.rm = TRUE),\n                value = c(min(df[[input$x_var]], na.rm = TRUE), max(df[[input$x_var]], na.rm = TRUE)))\n  })\n\n  output$explorer_plot &lt;- renderPlotly({\n    data_filtered &lt;- df %&gt;%\n      filter(\n        .data[[input$x_var]] &gt;= input$data_range[1] &\n          .data[[input$x_var]] &lt;= input$data_range[2]\n      )\n\n    plot_ly(data_filtered, x = ~.data[[input$x_var]], y = ~.data[[input$y_var]],\n            type = \"scatter\", mode = \"markers\") %&gt;%\n      layout(title = paste(input$x_var, \"vs\", input$y_var),\n             xaxis = list(title = input$x_var),\n             yaxis = list(title = input$y_var))\n  })\n\n  output$data_insights &lt;- renderText({\n    paste(\"Explore the relationship between the variables selected. Adjust the range and see how the data distribution changes.\")\n  })\n\n  output$avg_x_card &lt;- renderValueBox({\n    avg_x &lt;- mean(df[[input$x_var]], na.rm = TRUE)\n    valueBox(\n      value = round(avg_x, 2),\n      subtitle = paste(\"Average\", input$x_var),\n      icon = icon(\"calculator\")\n    )\n  })\n\n  output$avg_y_card &lt;- renderValueBox({\n    avg_y &lt;- mean(df[[input$y_var]], na.rm = TRUE)\n    valueBox(\n      value = round(avg_y, 2),\n      subtitle = paste(\"Average\", input$y_var),\n      icon = icon(\"calculator\")\n    )\n  })\n\n  output$correlation_card &lt;- renderValueBox({\n    correlation &lt;- cor(df[[input$x_var]], df[[input$y_var]], use = \"complete.obs\")\n    valueBox(\n      value = round(correlation, 2),\n      subtitle = \"Correlation\",\n      icon = icon(\"chart-line\")\n    )\n  })\n}"
  },
  {
    "objectID": "presentation.html#quarto",
    "href": "presentation.html#quarto",
    "title": "Project title",
    "section": "Quarto",
    "text": "Quarto\n\nThe presentation is created using the Quarto CLI\n## sets the start of a new slide"
  },
  {
    "objectID": "presentation.html#layouts",
    "href": "presentation.html#layouts",
    "title": "Project title",
    "section": "Layouts",
    "text": "Layouts\nYou can use plain text\n\n\n\nor bullet points1\n\n\nor in two columns\n\n\n\nlike\nthis\n\nAnd add footnotes"
  },
  {
    "objectID": "presentation.html#code",
    "href": "presentation.html#code",
    "title": "Project title",
    "section": "Code",
    "text": "Code\n\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic       p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 (Intercept)   25.3      3.08        8.22 0.00000000358\n2 speed         -0.116    0.0642     -1.81 0.0806       \n\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    0.0983        0.0682  5.82      3.27  0.0806     1  -101.  207.  212.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;"
  },
  {
    "objectID": "presentation.html#plots",
    "href": "presentation.html#plots",
    "title": "Project title",
    "section": "Plots",
    "text": "Plots"
  },
  {
    "objectID": "presentation.html#plot-and-text",
    "href": "presentation.html#plot-and-text",
    "title": "Project title",
    "section": "Plot and text",
    "text": "Plot and text\n\n\n\nSome text\ngoes here"
  },
  {
    "objectID": "presentation.html#tables",
    "href": "presentation.html#tables",
    "title": "Project title",
    "section": "Tables",
    "text": "Tables\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale"
  },
  {
    "objectID": "presentation.html#images",
    "href": "presentation.html#images",
    "title": "Project title",
    "section": "Images",
    "text": "Images\n\nImage credit: Danielle Navarro, Percolate."
  },
  {
    "objectID": "presentation.html#math-expressions",
    "href": "presentation.html#math-expressions",
    "title": "Project title",
    "section": "Math Expressions",
    "text": "Math Expressions\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g. $\\alpha+\\beta$ renders \\(\\alpha + \\beta\\). You can use the display style with double dollar signs:\n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\\[\n\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i\n\\]\nLimitations:\n\nThe source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting $$ must appear in the very beginning of a line, followed immediately by a non-space character, and the ending $$ must be at the end of a line, led by a non-space character;\nThere should not be spaces after the opening $ or before the closing $."
  },
  {
    "objectID": "presentation.html#feeling-adventurous",
    "href": "presentation.html#feeling-adventurous",
    "title": "Project title",
    "section": "Feeling adventurous?",
    "text": "Feeling adventurous?\n\nYou are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.\nBut some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Environmental and Demographic Analysis of Pittsburgh",
    "section": "",
    "text": "The relationship between nitrogen dioxide (NO₂) levels and respiratory-related hospital admissions.\nThe impact of floodplain zones on housing density across block groups.\nUsing integrated datasets on air quality, demographics, and floodplain zones, we develop an interactive website that supports data cleaning, exploratory analysis, and visualization. The application allows for dynamic handling of missing values and outliers, enabling users to explore different data scenarios. Through exploratory data analysis, we investigate variable distributions and correlations, offering insights into public health risks linked to air pollution. Statistical models further quantify the effects of NO₂ on hospital admissions and explore how floodplain extent influences housing density. Our findings provide a data-driven approach to identifying vulnerable populations and regions, enabling a deeper understanding of environmental and demographic impacts on public health and housing. This project underscores the importance of interactive analytics in supporting evidence-based public health policies and urban planning for resilient communities."
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Environmental and Demographic Analysis of Pittsburgh",
    "section": "",
    "text": "The relationship between nitrogen dioxide (NO₂) levels and respiratory-related hospital admissions.\nThe impact of floodplain zones on housing density across block groups.\nUsing integrated datasets on air quality, demographics, and floodplain zones, we develop an interactive website that supports data cleaning, exploratory analysis, and visualization. The application allows for dynamic handling of missing values and outliers, enabling users to explore different data scenarios. Through exploratory data analysis, we investigate variable distributions and correlations, offering insights into public health risks linked to air pollution. Statistical models further quantify the effects of NO₂ on hospital admissions and explore how floodplain extent influences housing density. Our findings provide a data-driven approach to identifying vulnerable populations and regions, enabling a deeper understanding of environmental and demographic impacts on public health and housing. This project underscores the importance of interactive analytics in supporting evidence-based public health policies and urban planning for resilient communities."
  },
  {
    "objectID": "index.html#introduction-and-data",
    "href": "index.html#introduction-and-data",
    "title": "Environmental and Demographic Analysis of Pittsburgh",
    "section": "Introduction and Data",
    "text": "Introduction and Data\nMotivation\nPittsburgh, PA, has a history of industrial activity contributing to elevated air pollution levels. Understanding the impact of pollutants such as NO2 and SO2 on hospital admissions and vulnerable demographic groups is critical for developing targeted public health interventions and guiding urban planning policies.\nResearch Questions:\n\nHow does NO2 and SO2 concentration impact hospital admissions for respiratory conditions across different block groups?\n\n2.How do gas concentrations affect age-specific housing density and demographics?\nDataset Description\nPitPA_BenMap:\n\nSource: EPA’s BenMAP program.\nDetails: 1089 observations, 15 variables. Key variables include NO2 levels and hospital admission rates.\nStructure: Quantitative and categorical data.\n\nPitPA_BG_Pop:\n\nSource: American Community Survey.\nDetails: 1089 observations, 13 variables. Includes population counts, racial demographics, and housing information.\n\nExploratory Data Analysis (EDA)\n\nSummary statistics of NO2 and SO2 concentrations, hospital admissions, and demographic variables.\nVisualizations: Histograms of pollutant levels, box plots comparing demographic groups, and scatter plots examining correlations.\nCleaning steps: Handling missing data, normalizing pollutant concentrations, and validating demographic counts."
  },
  {
    "objectID": "index.html#methodology",
    "href": "index.html#methodology",
    "title": "Environmental and Demographic Analysis of Pittsburgh",
    "section": "Methodology",
    "text": "Methodology\n\nApproach\nThe project integrates environmental and demographic data to explore relationships through visualization and statistical modeling.\nTechniques Used: - Scatter plots, heatmaps, regression modeling, and geographic visualizations.\nTools: - R packages such as ggplot2, dplyr, and leaflet.\n\n\nVisualization Techniques\n\nResearch Question 1:\n\nScatter plot with geom_smooth() to visualize the relationship between pollutant concentration and hospital admissions.\nHeatmaps using spatial data to overlay pollutant levels on hospital admission rates.\n\n\n\nResearch Question 2:\n\nAge group analysis via bar charts and scatter plots to highlight the disproportionate effects of pollutants on various age groups.\nBox plots for comparing housing density across different age groups and racial demographics.\n\n\n\n\nAdditional Analysis\n\nLinear regression to assess the impact of pollutants (NO2, SO2) on hospital admissions, controlling for demographic factors such as population density.\nInteraction terms in regression models to explore how the relationship between pollutants and health outcomes varies between urban and suburban block groups."
  },
  {
    "objectID": "index.html#results",
    "href": "index.html#results",
    "title": "Environmental and Demographic Analysis of Pittsburgh",
    "section": "Results",
    "text": "Results\n\nKey Findings\n\nThere is a positive correlation between NO2 levels and hospital admissions for respiratory conditions.\nVulnerable groups, such as children under 13, show higher exposure in areas with dense housing.\n\n\n\nVisualizations\n\nHeatmaps depicting pollutant concentration and hospital admission rates, clearly showing areas of high exposure.\nAge and housing density scatter plots, annotated to highlight key trends, especially in areas with higher pollutants and greater population density.\n\n\n\nInterpretation\n\nThe visual evidence supports the hypothesis that NO2 levels significantly impact hospital admissions, particularly in vulnerable demographics, such as children and the elderly."
  },
  {
    "objectID": "index.html#discussion",
    "href": "index.html#discussion",
    "title": "Environmental and Demographic Analysis of Pittsburgh",
    "section": "Discussion",
    "text": "Discussion\n\nInsights\n\nPollutant exposure is strongly linked to public health outcomes, with clear demographic disparities evident.\nFindings support urban interventions to mitigate pollution effects, particularly in high-density areas."
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "Environmental and Demographic Analysis of Pittsburgh",
    "section": "Conclusion",
    "text": "Conclusion\nThe analysis highlights significant health impacts of NO2 and SO2 in Pittsburgh, with disproportionate effects on vulnerable populations. The insights gained can guide urban policies and public health strategies to effectively address these disparities and improve community well-being."
  },
  {
    "objectID": "Contract.html",
    "href": "Contract.html",
    "title": "Team Project Contract",
    "section": "",
    "text": "[Disha Motwani, +1 5202835095]\n[Jayant Biradar, +91 7671890619]\n[Harsh Wasnik, +1 520-250-1277]\n[Venkata Satya Murali Krishna Chittlu, +1 520-283-5536]\n[Spoorthy Nagendra, +1 520-389-7254]\n[Abhighyan Bommerla, +1 520-440-9580]\n\n\n\n\n\nProject Description: This project visualizes US energy trends, exploring the links between energy usage and economic conditions during recessions,using R and Ggplot for clear reproducible analysis.\n\nExpected Deliverables:\nDetailed analysis and report of the findings in the QMD document.\nTwo high quality visualizations.\nSolving research questions.\nGit repo containing all necessary data and codes.\nProject website creation using R-studio/quarto or any other tools.\n\n\n\n\n\n\n\nData Integration: Merge EIA energy data with US census data.\nResearch Questions: Analyse energy usage during recessions.\nVisualizations: Create intuitive visualizations.\nReproducibility: Share all code on github with right execution steps\nLearnings: Explore new tools and techniques for better visualizations\nLearning Objectives: [What skills or knowledge each team member hopes to develop.]\n\n\n\n\n\n\n\n\nProject manager: [Satya] - Ensures timelines are met, organizes meetings, and manages communications.\nData Analyst: [Jayant, Harsh] - Responsible for data cleaning, analysis, and exploratory visualizations.\nVisualization Specialist: [Spoorthy, Abhighyan] - Designs the final visualizations and makes aesthetic choices.\nDocumentation Lead: [Disha, Satya, spoorthy] - Keeps detailed notes, ensures all project decisions are documented, and handles the final report\n\n\n\n\n\n\n\n\nParticipating actively in all meetings.\nCompleting their assigned tasks on time.\nCommunicating openly and promptly if issues arise.\n\n\n\n\n\n\nMeeting Schedule: Weekly on [Sunday] at [2-4PM] via [Zoom].\nPrimary Communication Platform: [Whatsapp].\nDecision-Making Process: Decisions will be made by consensus; if a consensus cannot be reached, a vote will be taken.\n\n\n\n\n\n\n\nData Collection and Cleaning: Completion by [14 OCT].\nExploratory Data Analysis: Completion by [25 OCT].\nDesign of Visualizations: Completion by [10 NOV].\nFinal Presentation and Report: Completion by [7 DEC].\n\nTask Assignments: [Use a table to assign tasks to team members with due dates.]\n\n\n\n\n\nAttendance Policy: All team members are expected to attend scheduled meetings unless previously discussed.\nQuality of Work: All deliverables should be completed to a professional standard.\nDeadlines: All members are responsible for meeting deadlines. If someone cannot meet a deadline, they must notify the team in advance.\n\n\n\n\n\nConflict Management: If a conflict arises, team members will:\n Discuss the issue openly during a team meeting. Attempt to resolve the issue through compromise.\n If the conflict persists, consult the project supervisor for guidance.\n\nSignatures\nBy signing below, each team member agrees to the terms of this contract and commits to working together effectively and respectfully.\n\n[Name]: Disha Motwani Date: 30th Sept 2024\n[Name]: Jayant Biradar Date: 30th Sept 2024\n[Name]: Chittlu Venkata Satya Murali Krishna Date: 30th Sept 2024\n[Name]: Harsh H Wasnik Date: 30th Sept 2024\n[Name]: Spoorthy Nagendra Date: 30th Sept 2024\n[Name]: Abhighyan Bommerla Date: 30th Sept 2024\n[Name]:"
  },
  {
    "objectID": "Contract.html#project-title-energy-trends-and-recessionsa-visual-analysis.",
    "href": "Contract.html#project-title-energy-trends-and-recessionsa-visual-analysis.",
    "title": "Team Project Contract",
    "section": "",
    "text": "[Disha Motwani, +1 5202835095]\n[Jayant Biradar, +91 7671890619]\n[Harsh Wasnik, +1 520-250-1277]\n[Venkata Satya Murali Krishna Chittlu, +1 520-283-5536]\n[Spoorthy Nagendra, +1 520-389-7254]\n[Abhighyan Bommerla, +1 520-440-9580]"
  },
  {
    "objectID": "Contract.html#project-overview",
    "href": "Contract.html#project-overview",
    "title": "Team Project Contract",
    "section": "",
    "text": "Project Description: This project visualizes US energy trends, exploring the links between energy usage and economic conditions during recessions,using R and Ggplot for clear reproducible analysis.\n\nExpected Deliverables:\nDetailed analysis and report of the findings in the QMD document.\nTwo high quality visualizations.\nSolving research questions.\nGit repo containing all necessary data and codes.\nProject website creation using R-studio/quarto or any other tools."
  },
  {
    "objectID": "Contract.html#team-goals",
    "href": "Contract.html#team-goals",
    "title": "Team Project Contract",
    "section": "",
    "text": "Data Integration: Merge EIA energy data with US census data.\nResearch Questions: Analyse energy usage during recessions.\nVisualizations: Create intuitive visualizations.\nReproducibility: Share all code on github with right execution steps\nLearnings: Explore new tools and techniques for better visualizations\nLearning Objectives: [What skills or knowledge each team member hopes to develop.]"
  },
  {
    "objectID": "Contract.html#team-roles-and-responsibilities",
    "href": "Contract.html#team-roles-and-responsibilities",
    "title": "Team Project Contract",
    "section": "",
    "text": "Project manager: [Satya] - Ensures timelines are met, organizes meetings, and manages communications.\nData Analyst: [Jayant, Harsh] - Responsible for data cleaning, analysis, and exploratory visualizations.\nVisualization Specialist: [Spoorthy, Abhighyan] - Designs the final visualizations and makes aesthetic choices.\nDocumentation Lead: [Disha, Satya, spoorthy] - Keeps detailed notes, ensures all project decisions are documented, and handles the final report"
  },
  {
    "objectID": "Contract.html#responsibilities",
    "href": "Contract.html#responsibilities",
    "title": "Team Project Contract",
    "section": "",
    "text": "Participating actively in all meetings.\nCompleting their assigned tasks on time.\nCommunicating openly and promptly if issues arise."
  },
  {
    "objectID": "Contract.html#communication-plan",
    "href": "Contract.html#communication-plan",
    "title": "Team Project Contract",
    "section": "",
    "text": "Meeting Schedule: Weekly on [Sunday] at [2-4PM] via [Zoom].\nPrimary Communication Platform: [Whatsapp].\nDecision-Making Process: Decisions will be made by consensus; if a consensus cannot be reached, a vote will be taken."
  },
  {
    "objectID": "Contract.html#work-plan-and-timeline",
    "href": "Contract.html#work-plan-and-timeline",
    "title": "Team Project Contract",
    "section": "",
    "text": "Data Collection and Cleaning: Completion by [14 OCT].\nExploratory Data Analysis: Completion by [25 OCT].\nDesign of Visualizations: Completion by [10 NOV].\nFinal Presentation and Report: Completion by [7 DEC].\n\nTask Assignments: [Use a table to assign tasks to team members with due dates.]"
  },
  {
    "objectID": "Contract.html#accountability-and-expectations",
    "href": "Contract.html#accountability-and-expectations",
    "title": "Team Project Contract",
    "section": "",
    "text": "Attendance Policy: All team members are expected to attend scheduled meetings unless previously discussed.\nQuality of Work: All deliverables should be completed to a professional standard.\nDeadlines: All members are responsible for meeting deadlines. If someone cannot meet a deadline, they must notify the team in advance."
  },
  {
    "objectID": "Contract.html#conflict-resolution-plan",
    "href": "Contract.html#conflict-resolution-plan",
    "title": "Team Project Contract",
    "section": "",
    "text": "Conflict Management: If a conflict arises, team members will:\n Discuss the issue openly during a team meeting. Attempt to resolve the issue through compromise.\n If the conflict persists, consult the project supervisor for guidance.\n\nSignatures\nBy signing below, each team member agrees to the terms of this contract and commits to working together effectively and respectfully.\n\n[Name]: Disha Motwani Date: 30th Sept 2024\n[Name]: Jayant Biradar Date: 30th Sept 2024\n[Name]: Chittlu Venkata Satya Murali Krishna Date: 30th Sept 2024\n[Name]: Harsh H Wasnik Date: 30th Sept 2024\n[Name]: Spoorthy Nagendra Date: 30th Sept 2024\n[Name]: Abhighyan Bommerla Date: 30th Sept 2024\n[Name]:"
  }
]